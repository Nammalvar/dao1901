{"version":3,"file":"c6e287959db72285351cd0b175b01172-output.js","sources":["webpack/bootstrap 46c6066a770cd286031b",".tmp/mocha-webpack/c6e287959db72285351cd0b175b01172-entry.js","","/Users/steph/Desktop/Crypto/Asseth/Dao1901/dao1901/tests/contracts [object Object]","tests/contracts/Dao1901Members.test.js","/Users/steph/Desktop/Crypto/Asseth/Dao1901/dao1901/contracts/Dao1901Members.sol","external \"web3\"","external \"chai\"","tests/contracts/Owned.test.js","/Users/steph/Desktop/Crypto/Asseth/Dao1901/dao1901/contracts/Owned.sol"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 46c6066a770cd286031b","\n    var testsContext = require.context(\"../../tests/contracts\", false);\n\n    var runnable = testsContext.keys();\n\n    runnable.forEach(testsContext);\n    \n\n\n// WEBPACK FOOTER //\n// .tmp/mocha-webpack/c6e287959db72285351cd0b175b01172-entry.js","undefined\n\n\n// WEBPACK FOOTER //\n// ","var map = {\n\t\"./Dao1901Members.test.js\": 2,\n\t\"./Owned.test.js\": 6\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/steph/Desktop/Crypto/Asseth/Dao1901/dao1901/tests/contracts object Object\n// module id = 1\n// module chunks = 0","import { Dao1901Members, web3 } from '../../contracts/Dao1901Members.sol';\n\nconst assert = require('chai').assert;\n\nlet alice, bob, carol;\n\n// Retrieve the current list of members\nfunction memberList(daoMembers) {\n  var members = [];\n  var addr = daoMembers.head();\n  while (addr != 0) {\n    if (daoMembers.isMember.call(addr)) {\n      members.push(addr)\n    }\n    addr = daoMembers.subscriptions(addr)[1]; // Access with .next ?\n  }\n  return members;\n}\n\nfunction getTransactionError(func) {\n  return Promise.resolve().then(func)\n    // using Geth - a transaction is still created, spending all the gas, but no state changes occur.\n    .then(function(txid) {\n      var tx = web3.eth.getTransaction(txid);\n      var txr = web3.eth.getTransactionReceipt(txid);\n      if (txr.gasUsed === tx.gas) throw new Error(\"all gas used\");\n    })\n    // using TestRPC - actually throws the error\n    .catch(function(err) {\n      return err;\n    });\n}\n\nfunction init() {\n  // Give name to accounts\n  alice = web3.eth.accounts[0];\n  console.log('alice: ', alice);\n  bob = web3.eth.accounts[1];\n  console.log('bob: ', bob);\n  carol = web3.eth.accounts[2];\n  console.log('carol: ', carol);\n}\n\n\ndescribe.only('Dao1901Members', () => {\n  before(() => {\n    init();\n  });\n\n  describe('initialization phase', () => {\n    it('should deploy contract', () => {\n      console.log('Dao1901Members.address', Dao1901Members.address);\n      assert(Dao1901Members.address, \"contract is not deployed\");\n    });\n\n    it('should have Alice as owner', () => {\n      console.log('Dao1901Members.owner()', Dao1901Members.owner());\n      assert(Dao1901Members.owner() == alice, \"first owner is not contract creator\");\n    });\n\n    it('should have members list head correctly initialized to 0x00', () => {\n      console.log('Dao1901Members.head()', Dao1901Members.head());\n      assert(Dao1901Members.head() == 0x00, \"members list head is not correctly initialized\")\n    });\n  });\n\n  describe('Member Management', () => {\n    it('should not have Bob as a member if not added', () => {\n      console.log('Dao1901Members.isMember(bob)', Dao1901Members.isMember(bob));\n      assert(!Dao1901Members.isMember(bob), \"Bob is a DAO member before subscribing\")\n    });\n\n    it('should add Bob as a member for 1 year', () => {\n      // subscribe account 1 for 1 year\n      console.log('Owner adds a member...');\n      Dao1901Members.subscribe.sendTransaction(bob, 1, {from:alice});\n      assert(Dao1901Members.isMember(bob), \"Bob is not a DAO member after subscribing\");\n    });\n\n    it('should have owner able to revoke a member', () => {\n      console.log('Owner revokes a member...', alice, Dao1901Members.owner());\n      Dao1901Members.subscribe.sendTransaction(bob, 0, {from:alice}); // Subscription ends now\n      assert(!Dao1901Members.isMember(bob), \"Bob is still a member after revokation\");\n    });\n\n    it('should readd bob and add carol', () => {\n      console.log('Owner renews Bob subscription and adds Carol as a member...');\n      Dao1901Members.subscribe.sendTransaction(bob, 1, {from:alice}); // renew subscription\n      Dao1901Members.subscribe.sendTransaction(carol, 1, {from:alice}); // add account 2\n      assert(Dao1901Members.isMember(bob), \"Bob is not a DAO member after renewal\");\n      assert(Dao1901Members.isMember(carol), \"Carol is not a DAO member after subscribing\");\n    });\n\n    it('should retrieve the list of members', () => {\n      let members = memberList(Dao1901Members);\n      assert(members.length === 2, \"Dao should have 2 members\");\n      assert(members.indexOf(bob) !== -1, \"Bob should be a member\");\n      assert(members.indexOf(carol) !== -1, \"Carol should be a member\");\n    });\n\n    it('should revoke head (the last added member) and retrieve list', () => {\n      console.log('Owner revokes head()...', alice, Dao1901Members.owner());\n      Dao1901Members.subscribe.sendTransaction(Dao1901Members.head(), 0, {from:alice});\n\n      let members = memberList(Dao1901Members);\n      assert(members.length === 1, `Dao should have 1 members, got ${members.length}`);\n      assert(members.indexOf(bob) !== -1, \"Bob should be a member\");\n      assert(members.indexOf(carol) === -1, \"Carol should not be a member\");\n    });\n  });\n\n  describe('Access Control', () => {\n    it('should not be able to add a member if not owner', () => {\n      console.log('Non-owner tries to insert a subscription...');\n      return getTransactionError(() => Dao1901Members.subscribe.sendTransaction(carol, 1, {from:carol}))\n        .then((err) => {\n          assert.isDefined(err, \"transaction should have thrown\");\n          assert(!Dao1901Members.isMember(carol), \"non-owners was able to add a member\");\n        });\n    });\n\n    it('should not be able to transfer ownership if not owner', () => {\n      console.log('Non-owner tries to transfer ownership...');\n      return getTransactionError(() => Dao1901Members.changeOwner.sendTransaction(carol, {from:carol}))\n        .then((err) => {\n          assert.isDefined(err, \"transaction should have thrown\");\n          assert(Dao1901Members.owner() === alice, \"non-owner was able to transfer ownership\");\n        });\n    });\n\n    it('should be able to transfer ownership if owner', () => {\n      console.log('Owner transfer ownership...');\n      Dao1901Members.changeOwner.sendTransaction(bob, {from:alice});\n      assert(Dao1901Members.owner() === bob, \"ownership was not transferred to Bob\");\n    });\n\n    it('should be able to add a member if owner', () => {\n      console.log('New owner bob adds carol as a member...');\n      assert(!Dao1901Members.isMember(carol), \"Carol should not be a member\");\n      Dao1901Members.subscribe.sendTransaction(carol, 1, {from:bob});\n      assert(Dao1901Members.isMember(carol), \"Carol was not added by new owner\");\n    });\n  });\n\n});\n\n\n\n// WEBPACK FOOTER //\n// tests/contracts/Dao1901Members.test.js","/**\n * Web3 Helper\n * Returns initialized web3 instance\n *\n * @author: U-Zyn Chua <chua@uzyn.com>\n */\nvar Web3 = require('web3');\nvar web3;\nif (typeof window !== 'undefined' && typeof window.web3 !== 'undefined') {\n web3 = new Web3(window.web3.currentProvider);\n} else {\n web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\n}\n\nmodule.exports = {\n\"Dao1901Members\": web3.eth.contract([{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_member\",\"type\":\"address\"},{\"name\":\"_yearsDuration\",\"type\":\"uint256\"}],\"name\":\"subscribe\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"head\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_member\",\"type\":\"address\"}],\"name\":\"isMember\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"subscriptions\",\"outputs\":[{\"name\":\"end\",\"type\":\"uint256\"},{\"name\":\"next\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"}]).at(\"0xa4dbe8f496e68506f51cd7d895cef1df45a493ac\"),\n\"Owned\": web3.eth.contract([{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"type\":\"function\"}]).at(\"0x05ea78c98f55fd0769ab69b685a702b44fa59926\"),\nweb3: web3\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/steph/Desktop/Crypto/Asseth/Dao1901/dao1901/contracts/Dao1901Members.sol\n// module id = 3\n// module chunks = 0","module.exports = require(\"web3\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"web3\"\n// module id = 4\n// module chunks = 0","module.exports = require(\"chai\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"chai\"\n// module id = 5\n// module chunks = 0","import {Owned, web3} from '../../contracts/Owned.sol';\nconst assert = require('chai').assert;\nlet alice, bob, carol;\n\nfunction init() {\n  // Give name to accounts\n  alice = web3.eth.accounts[0];\n  console.log('alice: ', alice);\n  bob = web3.eth.accounts[1];\n  console.log('bob: ', bob);\n  carol = web3.eth.accounts[2];\n  console.log('carol: ', carol);\n}\n\ndescribe('Owned', () => {\n  before(() => {\n    init();\n  });\n\n  it('should deploy contract', () => {\n    console.log('Owned.address', Owned.address);\n    assert(Owned.address, \"contract is not deployed\");\n  });\n\n  it.skip('should not be able to transfer DAO1901 ownership', () => {\n    console.log('Non-owner tries to transfer ownership...', carol, Owned.owner());\n    Owned.changeOwner.sendTransaction(carol, {from:carol});\n    assert(Owned.owner() == alice, \"non-owner was able to transfer ownership\");\n  });\n\n  it('should transfer DAO1901 ownership', () => {\n    console.log('Owner transfer ownership...');\n    Owned.changeOwner.sendTransaction(bob, {from:alice});\n    assert(Owned.owner() == bob, \"ownership was not transfered to Bob\");\n  });\n});\n\n\n\n// WEBPACK FOOTER //\n// tests/contracts/Owned.test.js","/**\n * Web3 Helper\n * Returns initialized web3 instance\n *\n * @author: U-Zyn Chua <chua@uzyn.com>\n */\nvar Web3 = require('web3');\nvar web3;\nif (typeof window !== 'undefined' && typeof window.web3 !== 'undefined') {\n web3 = new Web3(window.web3.currentProvider);\n} else {\n web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\n}\n\nmodule.exports = {\n\"Owned\": web3.eth.contract([{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"type\":\"function\"}]).at(\"0x810acdfde31839aa1b41ac95bf579cc881692e1a\"),\nweb3: web3\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/steph/Desktop/Crypto/Asseth/Dao1901/dao1901/contracts/Owned.sol\n// module id = 7\n// module chunks = 0"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrCA;AACA;ACCA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AFAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;AGhJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AClBA;;;;;;ACAA;;;;;;;;ACAA;AACA;AAAA;AACA;ANAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AOlCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;","sourceRoot":""}