// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":false,"inputs":[{"name":"_secretary","type":"address"},{"name":"_president","type":"address"},{"name":"_treasurer","type":"address"}],"name":"setBureau","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"_address","type":"address"},{"name":"_payed","type":"bool"},{"name":"_vote","type":"bool"}],"name":"createMember","outputs":[],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"memberId","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"members","outputs":[{"name":"memberSince","type":"uint256"},{"name":"payed","type":"bool"},{"name":"canVote","type":"bool"},{"name":"role","type":"uint8"}],"type":"function"},{"constant":false,"inputs":[{"name":"id","type":"uint256"}],"name":"getMemberSince","outputs":[{"name":"memberSince","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[],"name":"getMemberLength","outputs":[{"name":"size","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[{"name":"id","type":"uint256"}],"name":"getMemberCanVote","outputs":[{"name":"vote","type":"bool"}],"type":"function"},{"inputs":[],"type":"constructor"}],
    binary: "606060405260008054600281018083559190829080158290116100585760020281600202836000526020600020918201910161005891905b8082111561017a5784815560018101805462ffffff19169055600201610037565b505060e0604052426060908152608082905260a0829052600460c0528154909250819081101561000257508054818052427f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5638190557f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e564805462ffffff19166204000017905561016060405260e0908152610100839052610120839052610140839052925060019081101561000257427f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e565557f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e566805462ffffff1916905533600160a060020a03168252602081905260408220556105e89150819061017e90396000f35b509056606060405236156100615760e060020a60003504631b6b865681146100635780632ddb59da146100cf578063391068211461022a5780635daf08ca14610242578063b49f45611461029a578063d965ea00146102d0578063f550a4c4146102e6575b005b610061600435602435604435600160a060020a0333166000908152600160205260408120548114806100c557506040812054815482918291811015610002579080526002026000805160206105c8833981519152015462010000900460ff1614155b1561035d57610002565b6100616004356024356044355b600160a060020a0333166000908152600160205260408120548114806101335750805460408220548291829190811015610002579080526002026000805160206105c8833981519152015462010000900460ff1614155b806101835750600160a060020a03331660009081526001602081905260408220548254919291811015610002579080526002026000805160206105c8833981519152015462010000900460ff1614155b806101d25750600160a060020a033316600090815260016020526040812054815460029291908110156100025790805281026000805160206105c8833981519152015462010000900460ff1614155b806102205750600160a060020a0333166000908152600160205280546040822054600292918110156100025790805281026000805160206105c8833981519152015462010000900460ff1614155b1561048d57610002565b6102d460043560016020526000908152604090205481565b610323600435600080548290811015610002575080526002026000805160206105c88339815191528101546000805160206105a8833981519152909101549060ff808216916101008104821691620100009091041684565b6102d46004356000600060005082815481101561000257505080526000805160206105a88339815191526002820201545b919050565b6000545b60408051918252519081900360200190f35b610349600435600060006000508281548110156100025750508052600281026000805160206105c88339815191520154610100900460ff166102cb565b604080519485529215156020850152901515838301526060830152519081900360800190f35b604080519115158252519081900360200190f35b60025460ff1615156001141561037257610002565b61037f84600160016100dc565b600160a060020a03841660009081526001602081905260408220548254919291811015610002579080526002026000805160206105c883398151915201805462ff00001916620100001790556103d7908490806100dc565b600160a060020a0383166000908152600160205260408120548154600292919081101561000257908052026000805160206105c883398151915201805462ff000019166202000017905561042d826001806100dc565b600160a060020a038216600090815260016020526040812054815460039291908110156100025790805260029081026000805160206105c883398151915201805462ff0000191662030000179055805460ff191660011790555050505050565b60008054600160a060020a038616825260016020819052604083208290558101808355909190828015829011610502578280526105029060029081026000805160206105a8833981519152908101918402015b808211156105a4576000815560018101805462ffffff191690556002016104e0565b5050509050805060806040519081016040528042815260200184815260200183815260200160048152602001506000600050828154811015610002578180526002026000805160206105a8833981519152019050815181556020820151600191909101805460408401516060949094015162010000026101009490940260ff199190911690921761ff0019169190911762ff0000191691909117905550505050565b509056290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e564",
    unlinked_binary: "606060405260008054600281018083559190829080158290116100585760020281600202836000526020600020918201910161005891905b8082111561017a5784815560018101805462ffffff19169055600201610037565b505060e0604052426060908152608082905260a0829052600460c0528154909250819081101561000257508054818052427f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5638190557f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e564805462ffffff19166204000017905561016060405260e0908152610100839052610120839052610140839052925060019081101561000257427f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e565557f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e566805462ffffff1916905533600160a060020a03168252602081905260408220556105e89150819061017e90396000f35b509056606060405236156100615760e060020a60003504631b6b865681146100635780632ddb59da146100cf578063391068211461022a5780635daf08ca14610242578063b49f45611461029a578063d965ea00146102d0578063f550a4c4146102e6575b005b610061600435602435604435600160a060020a0333166000908152600160205260408120548114806100c557506040812054815482918291811015610002579080526002026000805160206105c8833981519152015462010000900460ff1614155b1561035d57610002565b6100616004356024356044355b600160a060020a0333166000908152600160205260408120548114806101335750805460408220548291829190811015610002579080526002026000805160206105c8833981519152015462010000900460ff1614155b806101835750600160a060020a03331660009081526001602081905260408220548254919291811015610002579080526002026000805160206105c8833981519152015462010000900460ff1614155b806101d25750600160a060020a033316600090815260016020526040812054815460029291908110156100025790805281026000805160206105c8833981519152015462010000900460ff1614155b806102205750600160a060020a0333166000908152600160205280546040822054600292918110156100025790805281026000805160206105c8833981519152015462010000900460ff1614155b1561048d57610002565b6102d460043560016020526000908152604090205481565b610323600435600080548290811015610002575080526002026000805160206105c88339815191528101546000805160206105a8833981519152909101549060ff808216916101008104821691620100009091041684565b6102d46004356000600060005082815481101561000257505080526000805160206105a88339815191526002820201545b919050565b6000545b60408051918252519081900360200190f35b610349600435600060006000508281548110156100025750508052600281026000805160206105c88339815191520154610100900460ff166102cb565b604080519485529215156020850152901515838301526060830152519081900360800190f35b604080519115158252519081900360200190f35b60025460ff1615156001141561037257610002565b61037f84600160016100dc565b600160a060020a03841660009081526001602081905260408220548254919291811015610002579080526002026000805160206105c883398151915201805462ff00001916620100001790556103d7908490806100dc565b600160a060020a0383166000908152600160205260408120548154600292919081101561000257908052026000805160206105c883398151915201805462ff000019166202000017905561042d826001806100dc565b600160a060020a038216600090815260016020526040812054815460039291908110156100025790805260029081026000805160206105c883398151915201805462ff0000191662030000179055805460ff191660011790555050505050565b60008054600160a060020a038616825260016020819052604083208290558101808355909190828015829011610502578280526105029060029081026000805160206105a8833981519152908101918402015b808211156105a4576000815560018101805462ffffff191690556002016104e0565b5050509050805060806040519081016040528042815260200184815260200183815260200160048152602001506000600050828154811015610002578180526002026000805160206105a8833981519152019050815181556020820151600191909101805460408401516060949094015162010000026101009490940260ff199190911690921761ff0019169190911762ff0000191691909117905550505050565b509056290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e564",
    address: "0xdc30ea53de4b2a332be027578506a41d0a9c12e1",
    generated_with: "2.0.9",
    contract_name: "Dao1901"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("Dao1901 error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("Dao1901 error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("Dao1901 error: Please call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("Dao1901 error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.Dao1901 = Contract;
  }

})();
